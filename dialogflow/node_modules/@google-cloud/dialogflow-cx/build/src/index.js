"use strict";
// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by synthtool. **
// ** https://github.com/googleapis/synthtool **
// ** All changes to this file may be overwritten. **
Object.defineProperty(exports, "__esModule", { value: true });
exports.protos = exports.WebhooksClient = exports.VersionsClient = exports.TransitionRouteGroupsClient = exports.TestCasesClient = exports.SessionsClient = exports.SessionEntityTypesClient = exports.SecuritySettingsServiceClient = exports.PagesClient = exports.IntentsClient = exports.FlowsClient = exports.ExperimentsClient = exports.EnvironmentsClient = exports.EntityTypesClient = exports.DeploymentsClient = exports.ChangelogsClient = exports.AgentsClient = exports.v3beta1 = exports.v3 = void 0;
const v3 = require("./v3");
exports.v3 = v3;
const v3beta1 = require("./v3beta1");
exports.v3beta1 = v3beta1;
const AgentsClient = v3.AgentsClient;
exports.AgentsClient = AgentsClient;
const ChangelogsClient = v3.ChangelogsClient;
exports.ChangelogsClient = ChangelogsClient;
const DeploymentsClient = v3.DeploymentsClient;
exports.DeploymentsClient = DeploymentsClient;
const EntityTypesClient = v3.EntityTypesClient;
exports.EntityTypesClient = EntityTypesClient;
const EnvironmentsClient = v3.EnvironmentsClient;
exports.EnvironmentsClient = EnvironmentsClient;
const ExperimentsClient = v3.ExperimentsClient;
exports.ExperimentsClient = ExperimentsClient;
const FlowsClient = v3.FlowsClient;
exports.FlowsClient = FlowsClient;
const IntentsClient = v3.IntentsClient;
exports.IntentsClient = IntentsClient;
const PagesClient = v3.PagesClient;
exports.PagesClient = PagesClient;
const SecuritySettingsServiceClient = v3.SecuritySettingsServiceClient;
exports.SecuritySettingsServiceClient = SecuritySettingsServiceClient;
const SessionEntityTypesClient = v3.SessionEntityTypesClient;
exports.SessionEntityTypesClient = SessionEntityTypesClient;
const SessionsClient = v3.SessionsClient;
exports.SessionsClient = SessionsClient;
const TestCasesClient = v3.TestCasesClient;
exports.TestCasesClient = TestCasesClient;
const TransitionRouteGroupsClient = v3.TransitionRouteGroupsClient;
exports.TransitionRouteGroupsClient = TransitionRouteGroupsClient;
const VersionsClient = v3.VersionsClient;
exports.VersionsClient = VersionsClient;
const WebhooksClient = v3.WebhooksClient;
exports.WebhooksClient = WebhooksClient;
exports.default = {
    v3,
    v3beta1,
    AgentsClient,
    ChangelogsClient,
    DeploymentsClient,
    EntityTypesClient,
    EnvironmentsClient,
    ExperimentsClient,
    FlowsClient,
    IntentsClient,
    PagesClient,
    SecuritySettingsServiceClient,
    SessionEntityTypesClient,
    SessionsClient,
    TestCasesClient,
    TransitionRouteGroupsClient,
    VersionsClient,
    WebhooksClient,
};
const protos = require("../protos/protos");
exports.protos = protos;
//# sourceMappingURL=index.js.map